{"version":3,"sources":["components/chess/Game.module.sass","components/chess/Tile.module.sass","components/chess/PlayerCard.module.sass","components/chess/Board.module.sass","components/chess/Piece.module.sass","assets/profile.svg","App.module.sass","assets/w_pawn.svg","assets/b_pawn.svg","assets/w_rook.svg","assets/b_rook.svg","assets/w_knight.svg","assets/b_knight.svg","assets/w_bishop.svg","assets/b_bishop.svg","assets/w_queen.svg","assets/b_queen.svg","assets/w_king.svg","assets/b_king.svg","hooks/useListState.js","components/chess/Tile.js","logic/board.js","logic/utility.js","logic/chess.js","components/chess/Piece.js","components/chess/Board.js","components/chess/PlayerCard.js","components/chess/Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useListState","initial","useState","list","setList","remove","index","filter","_","i","value","add","item","pop","length","last","set","clear","Tile","className","size","x","y","children","draggable","animated","shade","dragPos","setDragPos","dragging","setDragging","dragRef","useRef","onMouseMove","e","ref","current","prect","parentElement","getBoundingClientRect","newPos","clientX","left","offsetWidth","clientY","top","offsetHeight","onMouseUp","document","removeEventListener","classes","styles","tile","push","tx","ty","scale","shadeStyle","undefined","backgroundColor","opacity","transform","join","onMouseDown","button","preventDefault","addEventListener","style","width","height","defaultProps","get_piece_info","board","piece_id","pieces","info","__clone_piece","piece","__clone_board","grid","map","row","slice","introduce_piece","pos","newPiece","newPieceId","newBoard","__create_piece","id","set_piece","__update_piece_pos","__get_grid_pos","get_piece","is_within_board","currentPiece","move_piece","from","to","movingPiece","delete_piece","lastMove","is_pos_equal","a","b","create_chess_board","j","capturedPieces","white","black","create_board","currentSide","type","side","sideParts","forEach","PIECES","pawn","name","image","w_pawn","b_pawn","rook","w_rook","b_rook","bishop","w_bishop","b_bishop","king","w_king","b_king","queen","w_queen","b_queen","knight","w_knight","b_knight","Piece","pawnImage","backgroundImage","Board","tileSize","state","onMove","selectedPiece","setSelectedPiece","queuedMove","setQueuedMove","boardRef","setArrowStart","arrows","addArrows","clearArrows","useEffect","getCoordFromEvent","rect","Math","floor","handleRightMouseDown","releaseMouseForArrowDraw","arrowStart","handleLeftMouseDown","is_empty_piece","releaseMouseForPieceMove","lastMove_component","selectedPiece_component","pieces_component","key","arrows_component","viewBox","xCenterOffset","yCenterOffset","fx","fy","cx","cy","r","fill","angle","delta","sub_pos","atan2","angle_pos","d","cos","PI","sin","onContextMenu","PlayerCard","src","time","active","profile_image","placeholderImage","alt","Game","setState","stateHistory","addStateHistory","popStateHistory","setStateHistory","game","move","to_id","from_id","from_side","to_type","is_valid_chess_move","newState","prev_side","next_turn","top_bar","controls","Provider","icon","onClick","rx","ry","collected_pieces","random","info_point","bottom_bar","href","App","app","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8f229fad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"Game_game__2IT7I\",\"top_bar\":\"Game_top_bar__1FJgZ\",\"bottom_bar\":\"Game_bottom_bar__3Dx5a\",\"controls\":\"Game_controls__68rD-\",\"icon\":\"Game_icon__wQtM2\",\"info\":\"Game_info__1bXHP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tile\":\"Tile_tile__MUOVe\",\"animated\":\"Tile_animated__-NfYW\",\"draggable\":\"Tile_draggable__yuadG\",\"dragging\":\"Tile_dragging__BxO6X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PlayerCard\":\"PlayerCard_PlayerCard__2NVBM\",\"profile_image\":\"PlayerCard_profile_image__1UOpu\",\"name\":\"PlayerCard_name__2tofi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Board_board__2jIW5\",\"arrows\":\"Board_arrows__VA_3l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"piece\":\"Piece_piece__JLVtF\",\"image\":\"Piece_image__2YvGE\",\"float-in\":\"Piece_float-in__3ypBW\"};","module.exports = __webpack_public_path__ + \"static/media/profile.a258f388.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__28xtY\"};","module.exports = __webpack_public_path__ + \"static/media/w_pawn.5cf462e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/b_pawn.c64efe83.svg\";","module.exports = __webpack_public_path__ + \"static/media/w_rook.a3e85776.svg\";","module.exports = __webpack_public_path__ + \"static/media/b_rook.f4020d2d.svg\";","module.exports = __webpack_public_path__ + \"static/media/w_knight.a06a9056.svg\";","module.exports = __webpack_public_path__ + \"static/media/b_knight.a651e3ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/w_bishop.07e16392.svg\";","module.exports = __webpack_public_path__ + \"static/media/b_bishop.cc440371.svg\";","module.exports = __webpack_public_path__ + \"static/media/w_queen.47bf56f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/b_queen.21b99ed2.svg\";","module.exports = __webpack_public_path__ + \"static/media/w_king.209f8af0.svg\";","module.exports = __webpack_public_path__ + \"static/media/b_king.f0d0d19f.svg\";","import { useState } from 'react'\r\n\r\nconst useListState = (initial) => {\r\n  const [list, setList] = useState(initial)\r\n\r\n  const add = (item) => {\r\n    setList([...list, item])\r\n  }\r\n\r\n  const remove = (index) => {\r\n    setList(list.filter((_, i) => i !== index))\r\n  }\r\n\r\n  const pop = () => {\r\n    if (list.length === 0) return null\r\n    const last = list[list.length - 1]\r\n    remove(list.length - 1)\r\n    return last\r\n  }\r\n\r\n  const clear = () => {\r\n    setList([])\r\n  }\r\n\r\n  return {\r\n    value: list,\r\n    add: add,\r\n    remove: remove,\r\n    pop: pop,\r\n    set: setList,\r\n    clear: clear,\r\n  }\r\n}\r\n\r\nexport default useListState\r\n","import React, { useState, useRef } from 'react'\r\n\r\nimport styles from './Tile.module.sass'\r\n\r\nconst Tile = ({\r\n  className,\r\n  size,\r\n  x,\r\n  y,\r\n  children,\r\n  draggable,\r\n  animated,\r\n  shade,\r\n}) => {\r\n  const [dragPos, setDragPos] = useState(null)\r\n  const [dragging, setDragging] = useState(false)\r\n  const dragRef = useRef(null)\r\n\r\n  const onMouseMove = (e) => {\r\n    const ref = dragRef.current\r\n    const prect = ref.parentElement.getBoundingClientRect()\r\n    const newPos = {\r\n      x: (e.clientX - prect.left) / ref.offsetWidth - 0.5,\r\n      y: (e.clientY - prect.top) / ref.offsetHeight - 0.5,\r\n    }\r\n    setDragPos(newPos)\r\n  }\r\n\r\n  const onMouseUp = (e) => {\r\n    document.removeEventListener('mousemove', onMouseMove)\r\n    document.removeEventListener('mouseup', onMouseUp)\r\n    setDragging(false)\r\n  }\r\n\r\n  const onMouseDown = (e) => {\r\n    // if draggable and it is a left click drag\r\n    if (draggable && e.button === 0) {\r\n      e.preventDefault()\r\n      document.addEventListener('mouseup', onMouseUp)\r\n      document.addEventListener('mousemove', onMouseMove)\r\n      setDragging(true)\r\n      setDragPos({ x: x, y: y })\r\n    }\r\n  }\r\n\r\n  let classes = [styles.tile, className]\r\n  if (dragging) classes.push(styles.dragging)\r\n  if (draggable) classes.push(styles.draggable)\r\n  if (animated) classes.push(styles.animated)\r\n\r\n  let tx = x\r\n  let ty = y\r\n  if (dragging) {\r\n    tx = dragPos.x\r\n    ty = dragPos.y\r\n  }\r\n\r\n  let scale = 1\r\n  if (dragging) {\r\n    scale = 1.1\r\n  }\r\n\r\n  let shadeStyle = {}\r\n  if (shade !== undefined) {\r\n    shadeStyle.backgroundColor = shade\r\n    shadeStyle.opacity = '0.4'\r\n  }\r\n\r\n  let transform = [`translate(${tx * 100}%,${ty * 100}%)`, `scale(${scale})`]\r\n\r\n  return (\r\n    <div\r\n      className={classes.join(' ')}\r\n      onMouseDown={onMouseDown}\r\n      ref={dragRef}\r\n      style={{\r\n        ...shadeStyle,\r\n        width: size,\r\n        height: size,\r\n        transform: transform.join(' '),\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nTile.defaultProps = {\r\n  animated: false,\r\n  draggable: false,\r\n  shade: undefined,\r\n}\r\n\r\nexport default Tile\r\n","export const create_board = (width, height, info) => {\r\n  let grid = []\r\n  for (let i = 0; i < height; i++) {\r\n    grid.push([])\r\n    for (let j = 0; j < width; j++) {\r\n      grid[i].push(null)\r\n    }\r\n  }\r\n\r\n  return {\r\n    width: width,\r\n    height: height,\r\n    grid: grid,\r\n    pieces: [],\r\n    info: info,\r\n    lastMove: null,\r\n    capturedPieces: {\r\n      white: [],\r\n      black: [],\r\n    },\r\n  }\r\n}\r\n\r\nexport const get_piece_info = (board, piece_id) => {\r\n  return board.pieces[piece_id].info\r\n}\r\n\r\nexport const get_piece_pos = (board, piece_id) => {\r\n  return board.pieces[piece_id].pos\r\n}\r\n\r\nexport const __clone_piece = (piece) => {\r\n  return { ...piece }\r\n}\r\n\r\nexport const __clone_board = (board) => {\r\n  return {\r\n    ...board,\r\n    info: { ...board.info },\r\n    grid: board.grid.map((row) => row.slice()),\r\n    pieces: board.pieces.map(__clone_piece),\r\n  }\r\n}\r\n\r\nconst __create_piece = (board, info) => {\r\n  const newPiece = {\r\n    pos: null,\r\n    info: info,\r\n  }\r\n  const newPieceId = board.pieces.length\r\n\r\n  // clone board and add new piece\r\n  let newBoard = __clone_board(board)\r\n  newBoard.pieces.push(newPiece)\r\n  return [newBoard, newPieceId]\r\n}\r\n\r\nexport const introduce_piece = (board, pos, info) => {\r\n  let [newBoard, id] = __create_piece(board, info)\r\n  newBoard = set_piece(newBoard, pos, id)\r\n  return newBoard\r\n}\r\n\r\nconst __update_piece_pos = (board, piece_id, pos) => {\r\n  let newBoard = __clone_board(board)\r\n  newBoard.pieces[piece_id].pos = pos\r\n  return newBoard\r\n}\r\n\r\nconst __get_grid_pos = (board, pos) => {\r\n  return board.grid[pos.y][pos.x]\r\n}\r\n\r\nexport const get_piece = (board, pos) => {\r\n  return __get_grid_pos(board, pos)\r\n}\r\n\r\nexport const is_within_board = (board, pos) =>\r\n  pos.x >= 0 && pos.x < board.width && pos.y >= 0 && pos.y < board.height\r\n\r\nexport const is_empty_piece = (board, pos) => {\r\n  return __get_grid_pos(board, pos) === null\r\n}\r\n\r\nconst set_piece = (board, pos, piece_id) => {\r\n  let newBoard = __clone_board(board)\r\n\r\n  // update current piece at pos if exists\r\n  const currentPiece = __get_grid_pos(newBoard, pos)\r\n  if (currentPiece !== null) {\r\n    newBoard = __update_piece_pos(newBoard, currentPiece, null)\r\n  }\r\n\r\n  // replace with new piece\r\n  newBoard.grid[pos.y][pos.x] = piece_id\r\n  if (piece_id !== null) {\r\n    newBoard = __update_piece_pos(newBoard, piece_id, pos)\r\n  }\r\n\r\n  return newBoard\r\n}\r\n\r\nconst delete_piece = (board, pos) => {\r\n  return set_piece(board, pos, null)\r\n}\r\n\r\nexport const move_piece = (board, from, to) => {\r\n  const movingPiece = get_piece(board, from)\r\n  let newBoard = delete_piece(board, from)\r\n  newBoard = set_piece(newBoard, to, movingPiece)\r\n  newBoard.lastMove = { from: from, to: to }\r\n  return newBoard\r\n}\r\n","export const is_pos_equal = (a, b) => {\r\n  return a.x === b.x && a.y === b.y\r\n}\r\n\r\nexport const add_pos = (a, b) => {\r\n  return { x: a.x + b.x, y: a.y + b.y }\r\n}\r\n\r\nexport const sub_pos = (a, b) => {\r\n  return { x: a.x - b.x, y: a.y - b.y }\r\n}\r\n\r\nexport const angle_pos = (a, b) => {\r\n  const delta = sub_pos(b, a)\r\n  return Math.atan2(delta.y, delta.x)\r\n}\r\n\r\nexport const UP = { x: 0, y: -1 }\r\nexport const DOWN = { x: 0, y: 1 }\r\nexport const LEFT = { x: -1, y: 0 }\r\nexport const RIGHT = { x: 1, y: 0 }\r\n","import {\r\n  introduce_piece,\r\n  create_board,\r\n  get_piece,\r\n  get_piece_info,\r\n  __clone_board,\r\n} from './board'\r\nimport { is_pos_equal, UP, DOWN, LEFT, RIGHT } from './utility'\r\n\r\n// assets\r\nimport w_pawn from '../assets/w_pawn.svg'\r\nimport b_pawn from '../assets/b_pawn.svg'\r\nimport w_rook from '../assets/w_rook.svg'\r\nimport b_rook from '../assets/b_rook.svg'\r\nimport w_knight from '../assets/w_knight.svg'\r\nimport b_knight from '../assets/b_knight.svg'\r\nimport w_bishop from '../assets/w_bishop.svg'\r\nimport b_bishop from '../assets/b_bishop.svg'\r\nimport w_queen from '../assets/w_queen.svg'\r\nimport b_queen from '../assets/b_queen.svg'\r\nimport w_king from '../assets/w_king.svg'\r\nimport b_king from '../assets/b_king.svg'\r\n\r\n//const get_possible_moves = (board, pos) => {}\r\n\r\nexport const create_chess_board = () => {\r\n  // create initial board\r\n  let board = create_board(8, 8, {\r\n    currentSide: 'white',\r\n  })\r\n\r\n  // pawn rows\r\n  for (let i = 0; i < 8; i++) {\r\n    board = introduce_piece(\r\n      board,\r\n      { x: i, y: 1 },\r\n      { type: 'pawn', side: 'black' }\r\n    )\r\n    board = introduce_piece(\r\n      board,\r\n      { x: i, y: 6 },\r\n      { type: 'pawn', side: 'white' }\r\n    )\r\n  }\r\n\r\n  // other two\r\n  const sideParts = [\r\n    { y: 0, side: 'black' },\r\n    { y: 7, side: 'white' },\r\n  ]\r\n  const typeParts = [\r\n    'rook',\r\n    'bishop',\r\n    'knight',\r\n    'queen',\r\n    'king',\r\n    'knight',\r\n    'bishop',\r\n    'rook',\r\n  ]\r\n\r\n  typeParts.forEach((type, x) => {\r\n    sideParts.forEach(({ y, side }) => {\r\n      board = introduce_piece(board, { x: x, y: y }, { type: type, side: side })\r\n    })\r\n  })\r\n\r\n  return board\r\n}\r\n\r\nexport const is_valid_chess_move = (board, from, to) => {\r\n  // cannot move where you already from\r\n  if (is_pos_equal(from, to)) return false\r\n\r\n  // get info\r\n  const to_id = get_piece(board, to)\r\n  const from_id = get_piece(board, from)\r\n  const { type: from_type, side: from_side } = get_piece_info(board, from_id)\r\n\r\n  // cannot make move for other side\r\n  if (from_side !== board.info.currentSide) return false\r\n\r\n  // if attempting a capture\r\n  const attempted_capture = to_id !== null\r\n  if (attempted_capture) {\r\n    const { type: to_type, side: to_side } = get_piece_info(board, to_id)\r\n\r\n    // cannot capture same side\r\n    if (from_side === to_side) return false\r\n\r\n    // cannot capture a king\r\n    if (to_type === 'king') return false\r\n  }\r\n\r\n  return true\r\n}\r\n\r\nexport const next_turn = (board) => {\r\n  let newBoard = __clone_board(board)\r\n  const prev_side = board.info.currentSide\r\n  if (prev_side === 'white') newBoard.info.currentSide = 'black'\r\n  else newBoard.info.currentSide = 'white'\r\n  return newBoard\r\n}\r\n\r\nexport const PIECES = {\r\n  pawn: {\r\n    name: 'pawn',\r\n    image: { white: w_pawn, black: b_pawn },\r\n  },\r\n  rook: {\r\n    name: 'rook',\r\n    image: { white: w_rook, black: b_rook },\r\n  },\r\n  bishop: {\r\n    name: 'bishop',\r\n    image: { white: w_bishop, black: b_bishop },\r\n  },\r\n  king: {\r\n    name: 'king',\r\n    image: { white: w_king, black: b_king },\r\n  },\r\n  queen: {\r\n    name: 'queen',\r\n    image: { white: w_queen, black: b_queen },\r\n  },\r\n  knight: {\r\n    name: 'knight',\r\n    image: { white: w_knight, black: b_knight },\r\n  },\r\n}\r\n","import React from 'react'\r\n\r\nimport Tile from './Tile'\r\n\r\nimport styles from './Piece.module.sass'\r\n\r\nimport { PIECES } from '../../logic/chess'\r\n\r\nconst Piece = ({ info, size, pos, draggable }) => {\r\n  //\r\n\r\n  let pawnImage = null\r\n  if (PIECES[info.type].image !== null)\r\n    pawnImage = PIECES[info.type].image[info.side]\r\n\r\n  return (\r\n    <Tile\r\n      className={styles.piece}\r\n      size={size}\r\n      x={pos.x}\r\n      y={pos.y}\r\n      draggable={draggable}\r\n      animated\r\n    >\r\n      <div\r\n        className={styles.image}\r\n        style={{ backgroundImage: `url(\"${pawnImage}\")` }}\r\n      ></div>\r\n    </Tile>\r\n  )\r\n}\r\n\r\nexport default Piece\r\n","import React, { useState, useRef, useEffect } from 'react'\r\n\r\nimport styles from './Board.module.sass'\r\n\r\nimport useListState from '../../hooks/useListState'\r\n\r\nimport Tile from './Tile'\r\nimport Piece from './Piece'\r\nimport {\r\n  get_piece,\r\n  is_within_board,\r\n  is_empty_piece,\r\n  get_piece_info,\r\n} from '../../logic/board'\r\nimport { is_pos_equal, angle_pos } from '../../logic/utility'\r\n\r\nconst Board = ({ tileSize, state, onMove }) => {\r\n  const [selectedPiece, setSelectedPiece] = useState(null)\r\n  const [queuedMove, setQueuedMove] = useState(null)\r\n  const { width, height, pieces, lastMove, info } = state\r\n  const boardRef = useRef(null)\r\n  const [arrowStart, setArrowStart] = useState(null)\r\n  const { value: arrows, add: addArrows, clear: clearArrows } = useListState([])\r\n\r\n  useEffect(() => {\r\n    clearArrows()\r\n  }, [state])\r\n\r\n  useEffect(() => {\r\n    if (queuedMove !== null) {\r\n      onMove(queuedMove)\r\n      setQueuedMove(null)\r\n    }\r\n  }, [queuedMove, onMove])\r\n\r\n  const getCoordFromEvent = (e) => {\r\n    const rect = boardRef.current.getBoundingClientRect()\r\n    const pos = {\r\n      x: Math.floor(((e.clientX - rect.left) / rect.width) * width),\r\n      y: Math.floor(((e.clientY - rect.top) / rect.height) * height),\r\n    }\r\n    return pos\r\n  }\r\n\r\n  const handleMouseDown = (e) => {\r\n    // if left mouse button\r\n    if (e.button === 0) handleLeftMouseDown(e)\r\n    // if right mouse button\r\n    else handleRightMouseDown(e)\r\n  }\r\n\r\n  const handleRightMouseDown = (e) => {\r\n    // get board location\r\n    const pos = getCoordFromEvent(e)\r\n\r\n    // break if pos outside of board\r\n    if (!is_within_board(state, pos)) return null\r\n\r\n    // set start\r\n    setArrowStart(pos)\r\n\r\n    document.addEventListener('mouseup', releaseMouseForArrowDraw)\r\n  }\r\n\r\n  const releaseMouseForArrowDraw = (e) => {\r\n    setArrowStart((arrowStart) => {\r\n      // skip if no arrow was started\r\n      if (arrowStart === null) return null\r\n\r\n      // get board location\r\n      const pos = getCoordFromEvent(e)\r\n\r\n      // break if pos outside of board\r\n      if (!is_within_board(state, pos)) return null\r\n\r\n      // add new arrow\r\n      addArrows({ from: arrowStart, to: pos })\r\n\r\n      // clear arrow start\r\n      return null\r\n    })\r\n    document.removeEventListener('mouseup', releaseMouseForArrowDraw)\r\n  }\r\n\r\n  const handleLeftMouseDown = (e) => {\r\n    const pos = getCoordFromEvent(e)\r\n\r\n    // break if pos outside of board\r\n    if (!is_within_board(state, pos)) return null\r\n\r\n    // if no piece is selected\r\n    if (selectedPiece === null) {\r\n      // break if no piece exists\r\n      if (is_empty_piece(state, pos)) return\r\n\r\n      // break if the piece is not current mover\r\n      const piece_id = get_piece(state, pos)\r\n      if (get_piece_info(state, piece_id).side !== info.currentSide) return\r\n\r\n      // select the piece for moving\r\n      setSelectedPiece(pos)\r\n      document.addEventListener('mouseup', releaseMouseForPieceMove)\r\n    }\r\n\r\n    // if a piece is selected -> second click move\r\n    else {\r\n      setQueuedMove({ from: selectedPiece, to: pos })\r\n      setSelectedPiece(null)\r\n    }\r\n  }\r\n\r\n  const releaseMouseForPieceMove = (e) => {\r\n    setSelectedPiece((selectedPiece) => {\r\n      const pos = getCoordFromEvent(e)\r\n\r\n      // break if no piece is selected\r\n      if (selectedPiece === null) return null\r\n\r\n      // break if pos outside of board\r\n      if (!is_within_board(state, pos)) return null\r\n\r\n      // click move (if release is in same place)\r\n      if (is_pos_equal(selectedPiece, pos)) {\r\n        return selectedPiece\r\n      }\r\n\r\n      // dragging release\r\n      else {\r\n        setQueuedMove({ from: selectedPiece, to: pos })\r\n        return null\r\n      }\r\n    })\r\n    document.removeEventListener('mouseup', releaseMouseForPieceMove)\r\n  }\r\n\r\n  const lastMove_component = lastMove && (\r\n    <div>\r\n      <Tile size={tileSize} shade='green' {...lastMove.from}></Tile>\r\n      <Tile size={tileSize} shade='green' {...lastMove.to}></Tile>\r\n    </div>\r\n  )\r\n\r\n  const selectedPiece_component = selectedPiece && (\r\n    <Tile size={tileSize} shade='yellow' {...selectedPiece} />\r\n  )\r\n\r\n  const pieces_component = (\r\n    <div>\r\n      {pieces.map((piece, index) => {\r\n        // skip deleted pieces\r\n        if (piece.pos === null) return null\r\n\r\n        // determine if draggable\r\n        const draggable =\r\n          state.info.currentSide === piece.info.side &&\r\n          (selectedPiece === null || is_pos_equal(selectedPiece, piece.pos))\r\n\r\n        return (\r\n          <Piece key={index} size={tileSize} draggable={draggable} {...piece} />\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n\r\n  const arrows_component = (\r\n    <svg className={styles.arrows} viewBox='0 0 100 100'>\r\n      {arrows.map(({ from, to }, index) => {\r\n        const xCenterOffset = 100 / width / 2\r\n        const yCenterOffset = 100 / height / 2\r\n        const fx = (from.x / width) * 100 + xCenterOffset\r\n        const fy = (from.y / height) * 100 + yCenterOffset\r\n\r\n        // circle\r\n        if (is_pos_equal(from, to)) {\r\n          return <circle key={index} cx={fx} cy={fy} r='0.35rem' fill='none' />\r\n        }\r\n\r\n        // arrow\r\n        else {\r\n          const arrow_length = 5\r\n          const angle = angle_pos(to, from)\r\n          const span = 20 // deg\r\n          const tx = (to.x / width) * 100 + xCenterOffset\r\n          const ty = (to.y / height) * 100 + yCenterOffset\r\n          return (\r\n            <g key={index}>\r\n              <path d={`M ${fx},${fy} ${tx},${ty}`} />\r\n              <path\r\n                d={`M ${tx},${ty} ${\r\n                  tx + Math.cos(angle + (span / 180) * Math.PI) * arrow_length\r\n                },${\r\n                  ty + Math.sin(angle + (span / 180) * Math.PI) * arrow_length\r\n                }`}\r\n              />\r\n              <path\r\n                d={`M ${tx},${ty} ${\r\n                  tx + Math.cos(angle - (span / 180) * Math.PI) * arrow_length\r\n                },${\r\n                  ty + Math.sin(angle - (span / 180) * Math.PI) * arrow_length\r\n                }`}\r\n              />\r\n            </g>\r\n          )\r\n        }\r\n      })}\r\n    </svg>\r\n  )\r\n\r\n  const preventDefault = (e) => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={styles.board}\r\n      ref={boardRef}\r\n      onMouseDown={handleMouseDown}\r\n      onContextMenu={preventDefault}\r\n      style={{\r\n        width: `calc(${tileSize} * ${width})`,\r\n        height: `calc(${tileSize} * ${height})`,\r\n      }}\r\n    >\r\n      {lastMove_component}\r\n      {selectedPiece_component}\r\n      {pieces_component}\r\n      {arrows_component}\r\n    </div>\r\n  )\r\n}\r\n\r\nBoard.defaultProps = {\r\n  tileSize: '5rem',\r\n}\r\n\r\nexport default Board\r\n","import React from 'react'\r\n\r\nimport placeholderImage from '../../assets/profile.svg'\r\n\r\nimport styles from './PlayerCard.module.sass'\r\n\r\nconst PlayerCard = ({ src, name, time, active }) => {\r\n  return (\r\n    <div className={styles.PlayerCard}>\r\n      <img\r\n        className={styles.profile_image}\r\n        src={placeholderImage}\r\n        alt={`${name} profile`}\r\n      />\r\n      <div className={styles.name}>{name}</div>\r\n      <div>{time}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nPlayerCard.defaultProps = {\r\n  src: placeholderImage,\r\n  active: true,\r\n  time: '10:00',\r\n  name: 'Example',\r\n}\r\n\r\nexport default PlayerCard\r\n","import React, { useState } from 'react'\r\n\r\nimport Board from './Board'\r\n\r\nimport styles from './Game.module.sass'\r\n\r\nimport { move_piece, __clone_board } from '../../logic/board'\r\nimport useListState from '../../hooks/useListState'\r\nimport {\r\n  is_valid_chess_move,\r\n  create_chess_board,\r\n  next_turn,\r\n} from '../../logic/chess'\r\nimport PlayerCard from './PlayerCard'\r\n\r\nimport { IconContext } from 'react-icons'\r\nimport { FaUndo, FaTrashAlt, FaDiceFive } from 'react-icons/fa'\r\n\r\nconst Game = () => {\r\n  const [state, setState] = useState(create_chess_board())\r\n  const {\r\n    value: stateHistory,\r\n    add: addStateHistory,\r\n    pop: popStateHistory,\r\n    set: setStateHistory,\r\n  } = useListState([])\r\n\r\n  const moveCallback = (move) => {\r\n    // check move validity\r\n    if (is_valid_chess_move(state, move.from, move.to)) {\r\n      // add old state to the history\r\n      addStateHistory(state)\r\n\r\n      // move the piece\r\n      let newState = move_piece(state, move.from, move.to)\r\n\r\n      // switch sides\r\n      newState = next_turn(newState)\r\n\r\n      // apply new state\r\n      setState(newState)\r\n    }\r\n  }\r\n\r\n  const undoMove = () => {\r\n    const newState = popStateHistory()\r\n    if (newState) setState(newState)\r\n  }\r\n\r\n  const resetGame = () => {\r\n    const newState = create_chess_board()\r\n    setState(newState)\r\n    setStateHistory([])\r\n  }\r\n\r\n  const shuffleBoard = () => {\r\n    const newState = __clone_board(state)\r\n\r\n    let collected_pieces = []\r\n\r\n    // collect pieces\r\n    newState.grid = newState.grid.map((row) => {\r\n      return row.map((piece_id, index) => {\r\n        if (piece_id !== null) {\r\n          collected_pieces.push(piece_id)\r\n          newState.pieces[piece_id].pos = null\r\n        }\r\n\r\n        return null\r\n      })\r\n    })\r\n\r\n    // randomly place pieces\r\n    let rx, ry, newPos\r\n    while (collected_pieces.length > 0) {\r\n      rx = Math.floor(Math.random() * state.width)\r\n      ry = Math.floor(Math.random() * state.height)\r\n      if (newState.grid[ry][rx] === null) {\r\n        let id = collected_pieces.pop()\r\n        newState.grid[ry][rx] = id\r\n        newState.pieces[id].pos = { x: rx, y: ry }\r\n      }\r\n    }\r\n    setStateHistory([])\r\n    setState(newState)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.game}>\r\n      <Board state={state} onMove={moveCallback} />\r\n      <div className={styles.top_bar}>\r\n        <div className={styles.controls}>\r\n          <IconContext.Provider\r\n            value={{ className: styles.icon, size: '1.5rem' }}\r\n          >\r\n            <FaUndo onClick={undoMove} />\r\n            <FaTrashAlt onClick={resetGame} />\r\n            <FaDiceFive onClick={shuffleBoard} />\r\n          </IconContext.Provider>\r\n        </div>\r\n        <div className={styles.info}>\r\n          <div className={styles.info_point}>\r\n            <b>Current Turn: </b>\r\n            {state.info.currentSide} ({stateHistory.length})\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={styles.bottom_bar}>\r\n        <span>\r\n          <b>react-chess</b> {'... just the ui :P'}\r\n        </span>\r\n        <span>\r\n          <b>by:</b> <a href='https://github.com/Mjtlittle'>Joshua Little</a>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game\r\n","import React from 'react'\n\nimport styles from './App.module.sass'\n\nimport Game from './components/chess/Game'\n\nfunction App() {\n  return (\n    <div className={styles.app}>\n      <Game />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}